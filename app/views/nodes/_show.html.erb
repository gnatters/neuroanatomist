<div class="embedded_node">
  <div id="node_options">
    <a href="#editing_node" id="edit_node">edit</a>
    <a href="#viewing_history_node" id="history_node">view history</a>
  </div>
  <div id="node_edit" class="node_option_content">
    <%= form_for @node, :url=>"/nodes/#{@node.id}?return=true", :remote => false do |f| %>
      <%= f.label :introduction, "Editing textile:" %> <a href="http://redcloth.org/textile/phrase-modifiers/" id="textile_ref" target="_blank">textile reference</a>
      <%= f.text_area :introduction, :rows => 16 %>
      <div class="privacy">
      <%= check_box :node, "Show_my_alias_in_history", :checked=>true%>
      <%= label :node, "Show_my_alias_in_history" %> (unchecking this box will hide the authorship details of your edit from public display)<br>
      </div>
      <input id="redcloth_preview" name="preview" type="button", value="Preview Changes">
      <%= f.submit "Save Changes!" %>
      <span id="inline_notice"></span>
    <% end %>
  </div>
  <div id="node_history" class="node_option_content">
    <%= render :partial => "nodes/history" %>
  </div>
    
  <h2 id="node_title"><%= @node.name %></h2>
  <div id="node_intro">
  <%= raw RedCloth.new((@node.introduction or "")).to_html %>
  </div>
  
  <%= javascript_tag "
    $('#node_options')[0].toggle_option = function(opt, action) {
      opt_tab = $('#'+opt+'_node')
      opt_div = $('#node_'+opt)
      mode = opt_tab.attr('href').split('#')[1].split('!').pop()
      if(action!='show' && (opt_tab.hasClass('active') || action=='hide')) {
        opt_tab.attr('href', '#'+mode).parent().children().removeClass('active');
        $('.node_option_content').removeClass('active');
      } else {
        opt_tab.siblings().removeClass('active');
        opt_tab.addClass('active').attr('href', '#!'+mode);
        opt_div.addClass('active');
      }
    }
    $('#redcloth_preview').click(function(){$.ajax({
      type: 'POST',
      url: '/nodes/preview',
      data: {'textile':$('#node_introduction').val()},
      success: function(r){
        $('#node_intro').html(r);
        $('#inline_notice').addClass('success_notice');
        $('#inline_notice').removeClass('error_notice');
        $('#inline_notice').html('Preview updated Sucessfully!');
        logger.log_event({type:'node_text_previewed', node: context.current_controller.active_node});
      },
      error: function(r){
        $('#inline_notice').addClass('error_notice');
        $('#inline_notice').removeClass('success_notice');
        $('#inline_notice').html('Error: Preview could not be updated!');
      },
      dataType: 'text'
    });});
    $(edit_node_#{@node.id}).bind('ajax:success', function(data, status, xhr){
        $('#inline_notice').addClass('success_notice');
        $('#inline_notice').removeClass('error_notice');
        $('#inline_notice').html('Text updated Sucessfully!');
        $('#node_intro')[0].display_version();
        $('#node_history')[0].refresh_history();
        logger.log_event({type:'node_text_submitted', node: context.current_controller.active_node});
      }).bind('ajax:error', function(data, status, xhr){
        $('#inline_notice').addClass('error_notice');
        $('#inline_notice').removeClass('success_notice');
        $('#inline_notice').html('Error: something went wrong, the text may not have been updated!');
    });
    $('#node_intro')[0].display_version = function(v){$.ajax({
      type: 'GET',
      url: '/nodes/#{@node.id}:v' + (v||''),
      success: function(response){
        $('#node_intro').html(response)
        logger.log_event({type:'node_history_viewed', node: context.current_controller.active_node});
      }
    })};
    $('#node_intro')[0].revert_to_version = function(v){
      if(!confirm('Are you sure you want to revert to this older version of this content?')) return false;
      if(v) $('#node_intro')[0].current=false;
      else $('#node_intro')[0].current=true;
      $.ajax({
      type: 'PUT',
      url: '/nodes/#{@node.id}?revert=' + (v||''),
      success: function(response){
        $('#node_intro').html(response); $('#node_history')[0].refresh_history()
        logger.log_event({type:'node_history_reverted', node: context.current_controller.active_node});
        }
    })}
    $('#node_history')[0].refresh_history = function(){ $.ajax({
      type: 'GET',
      url: '/nodes/#{@node.id}:history',
      success: function(response) { $('#node_history').html(response) }
    })};
    $('#node_intro')[0].reload_content = function(){
      // reload node content, history table and reset notices.
      $('#node_intro')[0].display_version()
      $('#inline_notice').removeClass();
      $('#inline_notice').html("");
    };
    
    $('textarea#node_introduction').focus(function(){logger.log_event({type:'node_edit_focus', node: context.current_controller.active_node});})
    $('textarea#node_introduction').change(function(){logger.log_event({type:'node_text_altered', node: context.current_controller.active_node});})
  
  "%>
</div>
