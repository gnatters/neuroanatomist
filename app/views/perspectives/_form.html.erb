<% 
if params[:region]
  params[:regions] = [*params[:region]]
  default_name = "Perspective for #{Region.find(:first,params[:region]).name}"
end
params[:regions] and params[:regions].map!(&:to_i) %>

<%= form_for(@perspective) do |f| %>
  <% if @perspective.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@perspective.errors.count, "error") %> prohibited this perspective from being saved:</h2>

      <ul>
      <% @perspective.errors.full_messages.each do |msg| %>
        <li><%= msg %></li>
      <% end %>
      </ul>
    </div>
  <% end %>

  <div class="field">
    <%= f.label :name %><br />
    <%= f.text_field :name, :value => default_name %>
  </div>
  <div class="field">
    <%= f.label :description %><br />
    <%= f.text_area :description, :rows=>3 %>
  </div
  <div class="field">
    <%= f.label :height %><br />
    <%= f.text_field :height %>
  </div>
  <div class="field">
    <%= f.label :angle %><br />
    <%= f.text_field :angle %>
  </div>
  <div class="field">
    <%= f.label :distance %><br />
    <%= f.text_field :distance %>
  </div>
  <div class="field">
    <%= label :inherit_style_set,  "Inherit Region Styles"%><br />
    <% selected_ss = @perspective.has_external_styles? ? @perspective.style_set.id : nil
       other_perspectives = ( @perspective.id ? Perspective.where("id != ?", @perspective.id) : Perspective.all ).map{|ps| [ps[:name],ps[:id]]} %>
    <%= select_tag :inherit_style_set, options_for_select([["don't inherit",0]]+other_perspectives, selected_ss) %>
  </div>
  
  <h4> Regions </h4>
  <table  class="backend_data">
    <tr>
      <th>Name</th>
      <th>Description</th>
      <th>Number of Definitions</th>
      <th>Include</th>
      <th>Colour</th>
      <th>Transparency</th>
      <th>Labeled</th>
    </tr>
  <% @regions.each do |region| %>
    <tr>
      <td><%= label :regions, "region_#{region.id}".to_sym, region.name %></td>
      <td><%= region.description %></td>
      <td><%= region.region_definitions.size %></td>
      <% region_style = @perspective.style_for(region)%>
      <td><%= check_box :regions, "region_#{region.id}".to_sym, :checked => ((params[:regions] and params[:regions].include? region.id) or (region_style and not region_style.orphaned)) ? true : false %></td>
      <td><%= text_field :colour, "region_#{region.id}".to_sym, :value => region_style ? region_style.colour : "auto" %></td>
      <td><%= text_field :transparency, "region_#{region.id}".to_sym, :value =>  region_style ? region_style.transparency : 1.0 %></td>
      <td><%= check_box :label, "region_#{region.id}".to_sym, :checked =>  region_style ? region_style.label : true %></td>
    </tr>
  <% end %>
  </table>
  
  <div class="actions">
    <%= f.submit %>
  </div>
<% end %>